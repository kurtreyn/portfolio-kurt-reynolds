{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { SET_PLACEMENTS, SET_IMPRESSIONS, SET_LOADING, SET_COST_PER_MILE, SET_SUM_IMPRESSIONS, SET_TOTAL_COST, SET_IMPRESSION_COST, SET_START_DATE, SET_END_DATE, SET_TOTAL_START_DATES, SET_TOTAL_END_DATES, SET_TOTAL_IMPRESSIONS, SET_TOTAL_COST_PER_MILE, SET_TOTAL_ALL_COST } from './actions';\nconst initialState = {\n  placements: [],\n  impression: [],\n  sumImpressions: [],\n  impressionCost: [],\n  costPerMile: [],\n  totalCost: [],\n  startDates: [],\n  endDates: [],\n  totalStartDates: [],\n  totalEndDates: [],\n  totalImpressions: [],\n  totalCostPerMile: [],\n  totalAllCost: [],\n  loading: false\n};\n\nconst Reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_PLACEMENTS:\n      return { ...state,\n        placements: action.payload\n      };\n\n    case SET_IMPRESSIONS:\n      return { ...state,\n        impressions: action.payload\n      };\n\n    case SET_COST_PER_MILE:\n      return { ...state,\n        costPerMile: action.payload\n      };\n\n    case SET_SUM_IMPRESSIONS:\n      return { ...state,\n        sumImpressions: action.payload\n      };\n\n    case SET_TOTAL_COST:\n      return { ...state,\n        totalCost: action.payload\n      };\n\n    case SET_IMPRESSION_COST:\n      return { ...state,\n        impressionCost: action.payload\n      };\n\n    case SET_START_DATE:\n      return { ...state,\n        startDates: action.payload\n      };\n\n    case SET_END_DATE:\n      return { ...state,\n        endDates: action.payload\n      };\n\n    case SET_TOTAL_START_DATES:\n      return { ...state,\n        totalStartDates: action.payload\n      };\n\n    case SET_TOTAL_END_DATES:\n      return { ...state,\n        totalEndDates: action.payload\n      };\n\n    case SET_TOTAL_IMPRESSIONS:\n      return { ...state,\n        totalImpressions: action.payload\n      };\n\n    case SET_TOTAL_COST_PER_MILE:\n      return { ...state,\n        totalCostPerMile: action.payload\n      };\n\n    case SET_TOTAL_ALL_COST:\n      return { ...state,\n        totalAllCost: action.payload\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Reducer;\nconst rootReducer = combineReducers({\n  Reducer\n});\nexport default rootReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["/Users/kurtreyn/Repos/portfolio-kurt-reynolds/src/redux/reducers.js"],"names":["combineReducers","SET_PLACEMENTS","SET_IMPRESSIONS","SET_LOADING","SET_COST_PER_MILE","SET_SUM_IMPRESSIONS","SET_TOTAL_COST","SET_IMPRESSION_COST","SET_START_DATE","SET_END_DATE","SET_TOTAL_START_DATES","SET_TOTAL_END_DATES","SET_TOTAL_IMPRESSIONS","SET_TOTAL_COST_PER_MILE","SET_TOTAL_ALL_COST","initialState","placements","impression","sumImpressions","impressionCost","costPerMile","totalCost","startDates","endDates","totalStartDates","totalEndDates","totalImpressions","totalCostPerMile","totalAllCost","loading","Reducer","state","action","type","payload","impressions","rootReducer"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport {\n  SET_PLACEMENTS,\n  SET_IMPRESSIONS,\n  SET_LOADING,\n  SET_COST_PER_MILE,\n  SET_SUM_IMPRESSIONS,\n  SET_TOTAL_COST,\n  SET_IMPRESSION_COST,\n  SET_START_DATE,\n  SET_END_DATE,\n  SET_TOTAL_START_DATES,\n  SET_TOTAL_END_DATES,\n  SET_TOTAL_IMPRESSIONS,\n  SET_TOTAL_COST_PER_MILE,\n  SET_TOTAL_ALL_COST,\n} from './actions';\n\nconst initialState = {\n  placements: [],\n  impression: [],\n  sumImpressions: [],\n  impressionCost: [],\n  costPerMile: [],\n  totalCost: [],\n  startDates: [],\n  endDates: [],\n  totalStartDates: [],\n  totalEndDates: [],\n  totalImpressions: [],\n  totalCostPerMile: [],\n  totalAllCost: [],\n  loading: false,\n};\n\nconst Reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PLACEMENTS:\n      return { ...state, placements: action.payload };\n    case SET_IMPRESSIONS:\n      return { ...state, impressions: action.payload };\n    case SET_COST_PER_MILE:\n      return { ...state, costPerMile: action.payload };\n    case SET_SUM_IMPRESSIONS:\n      return { ...state, sumImpressions: action.payload };\n    case SET_TOTAL_COST:\n      return { ...state, totalCost: action.payload };\n    case SET_IMPRESSION_COST:\n      return { ...state, impressionCost: action.payload };\n    case SET_START_DATE:\n      return { ...state, startDates: action.payload };\n    case SET_END_DATE:\n      return { ...state, endDates: action.payload };\n    case SET_TOTAL_START_DATES:\n      return { ...state, totalStartDates: action.payload };\n    case SET_TOTAL_END_DATES:\n      return { ...state, totalEndDates: action.payload };\n    case SET_TOTAL_IMPRESSIONS:\n      return { ...state, totalImpressions: action.payload };\n    case SET_TOTAL_COST_PER_MILE:\n      return { ...state, totalCostPerMile: action.payload };\n    case SET_TOTAL_ALL_COST:\n      return { ...state, totalAllCost: action.payload };\n    case SET_LOADING:\n      return { ...state, loading: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  Reducer,\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}